import{j as l}from"./jsx-runtime-D_zvdyIk.js";import{I as u}from"./IconButton-BAtEyCON.js";import{a as g,b}from"./styles-8MddfzVJ.js";import{r}from"./iframe-Bvnjis0j.js";import"./format-FJJUaZs2.js";function f({title:e,titleId:t,...n},o){return r.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor","aria-hidden":"true","data-slot":"icon",ref:o,"aria-labelledby":t},n),e?r.createElement("title",{id:t},e):null,r.createElement("path",{fillRule:"evenodd",d:"M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.006 5.404.434c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.434 2.082-5.005Z",clipRule:"evenodd"}))}const m=r.forwardRef(f),{expect:a,fn:v,spyOn:h,userEvent:w,within:B}=__STORYBOOK_MODULE_TEST__,S={args:{children:l.jsx(m,{}),isDisabled:!1,onClick:v(),shape:"rounded",size:"large",variant:"outlined"},argTypes:{children:{control:!1,description:"content of the component (SVGElement)",table:{category:"required",type:{summary:"ReactNode"}},type:{name:"function",required:!0}},isDisabled:{control:"boolean",description:"if true, the component will be disabled",table:{category:"optional"}},onClick:{control:!1,description:"click event handler",table:{category:"optional",type:{summary:"(e: MouseEvent<ButtonElement>) => void"}}},shape:{control:{type:"inline-radio"},description:"icon button shape",options:["circular","rounded","square"],table:{category:"optional",type:{summary:"circular | rounded | square"}}},size:{control:{type:"inline-radio"},description:"icon button size",options:["large","medium","small","mini"],table:{category:"optional",type:{summary:"large | medium | small | mini"}}},variant:{control:{type:"inline-radio"},description:"icon button variant",options:["outlined","contained","text"],table:{category:"optional",type:{summary:"outlined | contained | text"}}}},component:u,parameters:{docs:{argTypes:{sort:"requiredFirst"}},layout:"centered"},tags:["autodocs"],title:"Button/IconButton"},i={args:{children:l.jsx(m,{}),isDisabled:!1,onClick:()=>console.log("Clicked!"),size:"large",variant:"outlined"},render:function(t){return l.jsx(u,{"aria-label":"찜하기",...t,children:t.children})}};i.play=async({args:e,canvasElement:t,step:n})=>{const o=B(t),p=h(console,"log");await n("icon button should render its children (svg icon)",async()=>{await a(await o.findByRole("button")).toBeInTheDocument();const y=document.getElementsByTagName("svg")[0];await a(o.getByRole("button")).toContainElement(y)}),await n(`icon button variant : ${e.variant}`,async()=>{await a(o.getByRole("button")).toHaveClass(g(e.variant))}),await n(`icon button size : ${e.size}`,async()=>{await a(o.getByRole("button")).toHaveClass(b(e.size))}),e.isDisabled||await n("when clicked, it should fire onclick event",async()=>{await w.click(o.getByRole("button")),await a(p).toHaveBeenCalledWith("Clicked!")})};var c,s,d;i.parameters={...i.parameters,docs:{...(c=i.parameters)==null?void 0:c.docs,source:{originalSource:`{
  args: {
    children: <StarIcon />,
    isDisabled: false,
    onClick: () => console.log('Clicked!'),
    size: 'large',
    variant: 'outlined'
  },
  render: function Render(args) {
    return <IconButton aria-label="찜하기" {...args}>
        {args.children}
      </IconButton>;
  }
}`,...(d=(s=i.parameters)==null?void 0:s.docs)==null?void 0:d.source}}};const z=["Default"];export{i as Default,z as __namedExportsOrder,S as default};
